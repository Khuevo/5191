      When describing about the experience from this project, some simple pieces of words are never enough. I have to state that I have been through an amazing yet challenging journey in the last three weeks. Starting from the initial process of finding the most appropriate and potential topic for the database to the very last submission of the project to Github, there are always things for me to talk about.       First of all, it was not a simple task, at least for me, to have some precise ideas on the database and the way to work on them. I started off with a list of four “potential” ones, but after proposing two in class and re-considering all the topics, I did not find any further reason to work on them. Finally, I went on a search in my bookshelf, and I was lucky enough to see the book “Lonely Planet: The World” that could be connected to the format of the project. I have a great passion for travel, and I believe my readers can find some valuable information, especially about some not-so-common countries, to have plans to travel to as well.       When done with that, the fun part began! I collected the information in the book and put them into my .xml file, where I stored all the data for the project. There is information of 25 distinct countries around the world in .xml. My very first parent node for the content is country-list, followed by country and the id. At first, it was countrylisting/country-list/country, which was more complicated and abundant, so I omit the first tag. Under the country tag, there are ten children tags, including all the necessary information for a country: name, image, continent, capital, population, area, official-language, attractions, cuisines, and when-to-go; and attractions, cuisines, and when-to-go have their children tags respectively: attraction, cuisine, and consideration. I think the hierarchy here is easy to understand and follow. One country often has multiple attractions to travel to, food and drinks are also important for travellers, and choosing the right time is vital to every trip/journey.  I also included one photo for each country in the database, because visual information often speaks louder than the words themselves. The key when working on the .xml file is that I had to make sure the tree of tags make sense, and not any tag was missing or unnecessary, and the file must be valid (props to the XML validators). Other than that, it is extremely important to start trying to link it to the .xsl file at the point it has only a small amount of data.      The next step is .xsl. Before undertaking with the file, the class had the chance to learn about XSLT via professor’s lecture, videos, readings, and homework, which all in all created a good base of knowledge on the process. After creating the .xsl file, I linked it to my .xml file with the <?xml-stylesheet> tag. Inside the .xsl file, two main tags were used are <xsl:for-each> for the name of the parent nodes, and <xsl:value-of> for the content followed those nodes. My first .xsl display was a table with the header of Country, Some glimpse view, Continent, Capital, Population, Area, Official Language, Attractions, Cuisines, and When to go. At this point, I used <xsl:element> to insert my image tag for the images of the countries that I already resized to fit the total display of the page, as well as used the <ol>, <li> tag with the <xsl:for-each> and <xsl:value-of> to create list inside the columns of Attractions, Cuisines, and When to go. The used of <ol> (to create an ordered list) here makes it easier for readers to follow the information.        After that, I created a .css file and linked it to the .xsl file above. At this point, I also finished with the input of the .xml. It took me longer to put all the information together than I expected. The .css made styles to all the headers in the .xsl file. I also polished the table with padding, and enabled the odd and even rows to have different colors. This really enhances the experience of readers when following the information on my page, as they will not lose track on some certain countries. Last but not least, the background image of the world map was added to reflect the content of the page.      I was really happy that I went over the stage, as I finally understood the whole process of working on .xml, .xsl, and .css. It appeared to be intimidating and complex at first, but step-by-step, everything turned clearer and understandable. .xsl was linked to .xml, and .css was linked to .xsl. The last file to work on is an .html where I transferred my .xsl to a proper .html page. I used javascript code at this point because some templates could be found in the Internet, and my final step was complete after a lot of validating, refresh pushing, typo fixing, etc.       But it has not been the end of my project yet. I spent some more time to shape two more sets of .xsl, .css, .html, and .js from the single .xml source. Both new .html pages brought about new experience for readers, since the information was display in lists, not a table anymore. And the part that consumed me most time was to insert photo slideshows to my new pages. Due to some typo mistakes, the pages were not processed properly. I also forgot to link my .js file to my .xsl, which also created another problem. However, the good thing about failing to insert the right tags to the files is that I turned out to have two distinct .hmtl pages with two different ways to display photos in slideshows.        The final step is to link all the .html pages I have into one final page, and to each other. I made them into a horizontal list, because I believed it would be nicer, and the lists are on the top left of each page. I could not place them in the right even though they would look better so, because the lists used the same <ul> tag list with the information of Contact Information, Continent, Area, etc. and they cannot be on the right. Moreover, I created a search bar for the three pages. After finishing writing this reflection, I will put it to the .html page as well.       The most outstanding thing throughout the process mentioned above is the consistent help I received from Dr. Lam. With his instructions, I knew the path to follow, the suitable step at each time, and a lot of other tags to use in each file. However, his guidance and support were beyond that. I went to his office three times with tons of questions and problems, and he was always willing to get me through each of them, so I always left with joy, encouragement, and more ideas to work on the project. Without his instructions, my project would take a lot longer to be put together, and some steps/skills must have not been included. I think I never say thanks enough to him for the completion of my project.       Overall, it was a great time to work on the project, and I learned so much from it! The experience is memorable, and I definitely have a lot more skills than I did before the project started. I also feel a lot more confident and really excited to learn about everything further after the project. This is just the beginning. I am also happy that I chose this topic, and at some point when working on my .xml file, I felt like I was just about to take my backpack and travel right away. 